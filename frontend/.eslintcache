[{"G:\\Node-Projects\\React-Node-App\\frontend\\src\\index.js":"1","G:\\Node-Projects\\React-Node-App\\frontend\\src\\App.js":"2","G:\\Node-Projects\\React-Node-App\\frontend\\src\\Home.js":"3","G:\\Node-Projects\\React-Node-App\\frontend\\src\\Display.js":"4"},{"size":168,"mtime":1608935185094,"results":"5","hashOfConfig":"6"},{"size":421,"mtime":1608993715217,"results":"7","hashOfConfig":"6"},{"size":4729,"mtime":1609061163954,"results":"8","hashOfConfig":"6"},{"size":3236,"mtime":1609061364161,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"k4heda",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"G:\\Node-Projects\\React-Node-App\\frontend\\src\\index.js",[],["20","21"],"G:\\Node-Projects\\React-Node-App\\frontend\\src\\App.js",[],"G:\\Node-Projects\\React-Node-App\\frontend\\src\\Home.js",["22","23","24","25"],"G:\\Node-Projects\\React-Node-App\\frontend\\src\\Display.js",["26","27","28","29"],"import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport bg1 from \"./images/bg1.png\";\r\nimport bg5 from \"./images/bg5.png\";\r\nimport bg6 from \"./images/bg6.png\";\r\nimport bg7 from \"./images/bg7.png\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\n\r\nexport default class Display extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      doctors: [],\r\n      success: false,\r\n    };\r\n  }\r\n  getDoctors() {\r\n    fetch(`/doctors/available/${this.props.location.state.day}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((respJson) => respJson.json())\r\n      .then((resp) => {\r\n        console.log(resp);\r\n        this.setState({ doctors: resp });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  componentDidMount() {\r\n    this.getDoctors();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Background>\r\n        <Container>\r\n          <Header>\r\n            <h2>\r\n              These are the available doctors on {this.props.location.state.day}\r\n            </h2>\r\n          </Header>\r\n          <List style={styles.list}>\r\n            {this.state.doctors.map((item, index) => {\r\n              return (\r\n                <ListItem style={styles.listItem} key={index}>\r\n                  {`Name: ${item.name}`}\r\n                  <br />\r\n                  {`Title: ${item.title}`}\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </Container>\r\n      </Background>\r\n    );\r\n  }\r\n}\r\n\r\nconst Background = styled.div`\r\n background: linear-gradient(rgba(28, 28, 28, 1), rgba(28, 28, 28, 1)),\r\n    url(${(props) => props.background});\r\n  background-repeat: no-repeat;\r\n  background-position: center top;\r\n  background-size: cover;\r\n  min-height: 100vh;\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: -2;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  height: 25%;\r\n  width: 70%;\r\n  background-color: transparent;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-size: 1.5vw;\r\n  margin: 10px 0px 0px 0px;\r\n  color: #eee;\r\n`;\r\n\r\nconst styles = {\r\n  list: {\r\n    maxHeight: \"80%\",\r\n    overflow: \"auto\",\r\n    backgroundColor: \"#1c1d1f\",\r\n    width: \"70%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    borderRadius: \"10px\",\r\n    border: \"1px solid white\",\r\n  },\r\n  listItem: {\r\n    color: \"#1c1d1f\",\r\n    margin: \"7px\",\r\n    padding: \"10px\",\r\n    backgroundColor: \"#f5f5f5\",\r\n    borderRadius: \"5px\",\r\n    width: \"95%\",\r\n    fontSize: \"20px\",\r\n    fontFamily: '\"Open Sans\", sans-serif',\r\n    // display:\"flex\",\r\n    // justifyContent:\"flex-start\",\r\n    // alignItems:\"center\",\r\n    // flexDirection:\"column\",\r\n  },\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: transparent;\r\n  min-height: 100vh;\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  z-index: 1;\r\n`;\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":11},{"ruleId":"34","severity":1,"message":"38","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":11},{"ruleId":"34","severity":1,"message":"39","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":11},{"ruleId":"34","severity":1,"message":"40","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":11},{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":11},{"ruleId":"34","severity":1,"message":"38","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":11},{"ruleId":"34","severity":1,"message":"39","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":11},{"ruleId":"34","severity":1,"message":"40","line":6,"column":8,"nodeType":"36","messageId":"37","endLine":6,"endColumn":11},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'bg1' is defined but never used.","Identifier","unusedVar","'bg5' is defined but never used.","'bg6' is defined but never used.","'bg7' is defined but never used.","no-global-assign","no-unsafe-negation"]